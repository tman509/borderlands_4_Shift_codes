name: Run SHiFT Bot (daily)

on:
  schedule:
    - cron: "0 0 * * *"   # daily at 00:00 UTC
  workflow_dispatch:
    inputs:
      reset_db:
        description: "Reset DB before run?"
        required: false
        type: boolean
        default: false
      test_webhook:
        description: "Send a Discord test message?"
        required: false
        type: boolean
        default: false
      test_message:
        description: "Custom test message content"
        required: false
        default: "Test: SHiFT bot webhook is connected."

permissions:
  contents: read

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download latest shift_codes.db artifact (if any)
        if: ${{ inputs.reset_db != true }}   # skip download if resetting
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: run.yml
          name: shift_codes-database
          path: ./
          if_no_artifact_found: ignore

      - name: Reset DB (optional)
        if: ${{ inputs.reset_db == true }}
        run: |
          echo "Reset requested: removing any existing DB"
          rm -f shift_codes.db

      - name: Send Discord test message (optional)
        if: ${{ inputs.test_webhook == true }}
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          if [ -z "$DISCORD_WEBHOOK_URL" ]; then
            echo "No DISCORD_WEBHOOK_URL secret set."
            exit 0
          fi
          payload=$(printf '{"content":"%s"}' "${{ inputs.test_message }}")
          curl -sS -H "Content-Type: application/json" -X POST -d "$payload" "$DISCORD_WEBHOOK_URL"

      - name: Run bot
        env:
          DB_PATH: ./shift_codes.db
          HTML_SOURCES: ${{ secrets.HTML_SOURCES }}
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
          REDDIT_SUBS: ${{ secrets.REDDIT_SUBS }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ ! -f shift_codes.db ]; then
            echo "No DB found; creating new empty DB."
            touch shift_codes.db
          fi
          python main.py

      - name: Upload updated DB
        uses: actions/upload-artifact@v4
        with:
          name: shift_codes-database
          path: shift_codes.db
          retention-days: 30
